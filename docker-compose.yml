version: '3.4'

x-app: &app
  build:
    context: .
    dockerfile: ./.dockerdev/app/Dockerfile
    args:
      RUBY_VERSION: '3.0.1'
      PG_MAJOR: '12'
      NODE_MAJOR: '12'
      YARN_VERSION: '1.22.5'
      BUNDLER_VERSION: '2.1.4'
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  image: messy_box_sample
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
  environment: &backend_env
    <<: *env
    DATABASE_URL: postgres://postgres:password@postgres:5432
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    ELASTICSEARCH_HOST: es
    ELASTICSEARCH_PORT: 9200
    REDIS_URL: redis://redis:6379
  depends_on:
    - postgres
    - es
    - redis

services:
  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
      - '3002:3002'

  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  postgres:
    image: postgres:12
    command: postgres -c log_statement=all
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: password
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  webpacker:
    <<: *backend
    command: bundle exec ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      <<: *env
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

  redis:
    image: redis:6.0
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  es:
    build:
      context: .
      dockerfile: ./.dockerdev/es/Dockerfile
    environment:
      - node.name=es01
      - cluster.name=es-sample-cluster
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms400m -Xmx400m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  system-test:
    <<: *backend
    ports:
      - '4000:4000'
    command: bundle exec rails test:system
    environment:
      <<: *backend_env
      RAILS_ENV: test
      SELENIUM_HUB_URL: http://selenium:4444/wd/hub
      APP_HOST: system-test
    depends_on:
      - postgres
      - es
      - selenium
      - redis

  selenium:
    image: selenium/standalone-chrome-debug
    volumes:
      - /dev/shm:/dev/shm
    ports:
    - "4444:4444"
    - "5900:5900"

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

volumes:
  bundle:
  node_modules:
  packs:
  postgres:
  rails_cache:
  redis:
  es:
